// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  COMPANY_HR
  COMPANY_ADMIN
  ADMIN
}

enum JobType {
  FULL_TIME
  PART_TIME
  INTERNSHIP
  REMOTE
}

model User {
  id          Int      @id @default(autoincrement())
  email       String   @unique
  firstName   String
  lastName    String
  password    String
  displayName String?
  avatar      String?
  role        Role     @default(USER)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Token       Token[]
  company     Company? @relation(fields: [companyId], references: [id])
  companyId   Int?
  files       File[]
}

model Token {
  id            Int      @id @default(autoincrement())
  user          User     @relation(fields: [userId], references: [id])
  userId        Int
  access_token  String
  refresh_token String
  expiresAt     DateTime
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@unique([userId, access_token])
}

model Company {
  id          Int      @id @default(autoincrement())
  code        String   @unique
  name        String
  description String
  address     String
  logo        String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  accounts     User[]
  recruitments Recruitment[]
}

model Recruitment {
  id         Int      @id @default(autoincrement())
  title      String
  content    String
  jobType    JobType
  minSalary  Int
  maxSalary  Int
  experience Int
  deadline   DateTime
  company    Company  @relation(fields: [companyId], references: [id])
  companyId  Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model File {
  id          String   @id @default(cuid())
  key         String   @unique
  name        String
  size        Int
  contentType String
  createdBy   User     @relation(fields: [createdById], references: [id])
  createdById Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
